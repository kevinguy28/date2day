import {
    Card,
    CardAction,
    CardContent,
    CardDescription,
    CardFooter,
    CardHeader,
    CardTitle,
} from "@/components/ui/card";
import {
    GoogleAuthProvider,
    browserLocalPersistence,
    createUserWithEmailAndPassword,
    onAuthStateChanged,
    setPersistence,
    signInWithEmailAndPassword,
    signInWithPopup,
} from "firebase/auth";
import { useEffect, useState } from "react";

import { Button } from "@/components/ui/button";
import { GalleryVerticalEnd } from "lucide-react";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { LoginForm } from "@/components/login-form";
import { auth } from "../firebase/firebase";
import { useNavigate } from "react-router-dom";

const Login = () => {
    const provider = new GoogleAuthProvider();
    const nav = useNavigate();
    const [emailLogin, setEmailLogin] = useState<string>("");
    const [passwordLogin, setPasswordLogin] = useState<string>("");
    const [emailSignup, setEmailSignup] = useState<string>("");
    const [passwordSignUp, setPasswordSignup] = useState<string>("");
    const [confirmPasswordSignup, setConfirmPasswordSignup] =
        useState<string>("");

    const handleLoginGoogle = async () => {
        try {
            // await setPersistence(auth, browserLocalPersistence); // ðŸ‘ˆ force localStorage

            const result = await signInWithPopup(auth, provider);

            const credential = GoogleAuthProvider.credentialFromResult(result);
            const token = credential?.accessToken;
            const user = result.user;

            console.log("User logged in:", user);
            nav("/");
        } catch (error) {
            console.error("Login failed:", error);
        }
    };

    const signupEmailPassword = async () => {
        console.log(emailSignup, passwordSignUp, confirmPasswordSignup);
        if (passwordSignUp === confirmPasswordSignup) {
            createUserWithEmailAndPassword(auth, emailSignup, passwordSignUp)
                .then((userCredentials) => {
                    const user = userCredentials.user;
                    console.log(user);
                })
                .catch((error) => {
                    console.log(error);
                });
        } else {
            const signUpErrorDiv = document.getElementById("signUpIdError");
            if (signUpErrorDiv) {
                signUpErrorDiv.textContent = "Error: Passwords do not match";
            }
        }
    };

    const signInEmailPassword = async () => {
        signInWithEmailAndPassword(auth, emailLogin, passwordLogin)
            .then((userCredential) => {
                // Signed in
                const user = userCredential.user;
                console.log(user);
                // ...
            })
            .catch((error) => {
                const errorCode = error.code;
                const errorMessage = error.message;
            });
    };

    return (
        <div className="grid min-h-svh lg:grid-cols-2">
            <div className="flex flex-col gap-4 p-6 md:p-10">
                <div className="flex justify-center gap-2 md:justify-start">
                    <a href="#" className="flex items-center gap-2 font-medium">
                        <div className="bg-primary text-primary-foreground flex size-6 items-center justify-center rounded-md">
                            <GalleryVerticalEnd className="size-4" />
                        </div>
                        Acme Inc.
                    </a>
                </div>
                <div className="flex flex-1 items-center justify-center">
                    <div className="w-full max-w-xs">
                        <LoginForm handleLoginGoogle={handleLoginGoogle} />
                    </div>
                </div>
            </div>
            <div className="bg-muted relative hidden lg:block">
                <img
                    src="/images/login/water.jpg"
                    alt="Image"
                    className="absolute inset-0 h-full w-full object-cover dark:brightness-[0.2] dark:grayscale"
                />
            </div>
        </div>
    );
};

export default Login;
